function testjs

%     htmlfile = 'gage.html';
%     htmlcode = readlines(htmlfile,'EmptyLineRule','skip','WhitespaceRule','trim');
%     htmlcode = char(join(htmlcode));
% 
%     jscode = 'var canvasRight = document.getElementById("right");ctx = canvasRight.getContext("2d");ctx.font = "40px Arial";ctx.strokeText("Right Side",10,60)';
% 
%     b = Browser([],figure('Position',[447 702 700 400]));
%     drawnow()
%     b.loadString(htmlcode)
%     drawnow()
%     pause(0.5)
%     b.executeJavaScript(jscode,b.URL,0)

    topID = 'top';
    cornerID = 'corner';
    rightID = 'right';

    dim = [150,150];

    fig = figure('Color','w');
    
    %fig.SizeChangedFcn = @onSizeChange;
    container = Browser.createFlowContainer(fig,'topdown');
    container.Margin = 1;
    a = Browser.createPanel(container,dim,[]);
    topFlowContainer = Browser.createFlowContainer(a,'lefttoright');
    topFlowContainer.Margin = 2;
    topPanel = Browser.createPanel(topFlowContainer,dim,[]);
    cornerPanel = Browser.createPanel(topFlowContainer,dim,dim);
    b = Browser.createPanel(container);
    botFlowContainer = Browser.createFlowContainer(b,'lefttoright');
    botFlowContainer.Margin = 2;
    axesPanel = Browser.createPanel(botFlowContainer);
    rightPanel = Browser.createPanel(botFlowContainer,[],dim);
    
    ax = axes('Parent',axesPanel);
    imshow('rice.png','Parent',ax);
    ax.Units = 'normalized';
    ax.Position = [0,0,1,1];
    ax.Toolbar = [];
    ax.XAxis.Visible = 'off';
    ax.YAxis.Visible = 'off';

    set(ax,'LooseInset',get(ax,'TightInset'))
    

    browserTop = Browser(Browser.BLANK_URL,topPanel);
    browserCorner = Browser(Browser.BLANK_URL,cornerPanel);
    browserRight = Browser(Browser.BLANK_URL,rightPanel);

    browserTop.loadString(getHTML(topID));
    browserCorner.loadString(getHTML(cornerID));    
    browserRight.loadString(getHTML(rightID));

    drawnow();
    pause(0.5)

    fig.WindowButtonMotionFcn = @(s,e) onMouseMove(s,e);
    browserCorner.executeJavaScript(getAnimatedClockJSCode(cornerID),[],0)
    browserRight.executeJavaScript(getBallJSCode(rightID),[],0)
    %plot(1:10);
    function onMouseMove( src, evnt )
        ax = src.CurrentAxes;
        cp = ax.CurrentPoint;
        x = sprintf('x: %2.3f',cp(1,1));
        y = sprintf('y: %2.3f',cp(1,2));
        jscode = sprintf('var c = document.getElementById("%s");ctx = c.getContext("2d");ctx.clearRect(0,0,c.width,c.height);ctx.font = "30px Arial";ctx.strokeText("%s",10,30);ctx.strokeText("%s",10,60)',topID,x,y);
        browserTop.executeJavaScript(jscode,[],0);     
    end    

end

    function html = getHTML(id)
        html = '<!DOCTYPE html><head><style>html,body{width: 100%; height: 100%; margin: 0px;}canvas{display: block; position: absolute;top: 0;left: 0;right: 0; bottom: 0;width: 100%;height: 100%}</style></head><body>';
        html = [html,sprintf('<canvas id="%s" style="position:absolute; left:0px; top:0px;"></canvas>',id)];
        %html = [html,sprintf('<canvas id="%s" width="%d" height="%d";" ></canvas>',id,wid,hgt)];
        html = [html,'</body></html>'];
    end

    function jscode = getAnimatedClockJSCode(id)

    % from https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Basic_animations
         jscode =  ['function clock() {',...
          'const now = new Date();'...
          sprintf('const canvas = document.getElementById("%s");',id),...
          'const ctx = canvas.getContext("2d");',...
          'ctx.save();',...
          'ctx.clearRect(0, 0, 150, 150);',...
          'ctx.translate(75, 75);',...
          'ctx.scale(0.4, 0.4);',...
          'ctx.rotate(-Math.PI / 2);',...
          'ctx.strokeStyle = "black";',...
          'ctx.fillStyle = "white";',...
          'ctx.lineWidth = 8;',...
          'ctx.lineCap = "round";',...     
          'ctx.save();',...
          'for (let i = 0; i < 12; i++) {',...
            'ctx.beginPath();',...
            'ctx.rotate(Math.PI / 6);',...
            'ctx.moveTo(100, 0);',...
            'ctx.lineTo(120, 0);',...
            'ctx.stroke();',...
          '}',...
          'ctx.restore();',...       
          'ctx.save();',...
          'ctx.lineWidth = 5;',...
          'for (let i = 0; i < 60; i++) {',...
           'if (i % 5 !== 0) {',...
              'ctx.beginPath();',...
              'ctx.moveTo(117, 0);',...
              'ctx.lineTo(120, 0);',...
              'ctx.stroke();',...
            '}',...
            'ctx.rotate(Math.PI / 30);',...
          '}',...
          'ctx.restore();',...        
          'const sec = now.getSeconds();',...
          'const min = now.getMinutes();',...
          'const hr = now.getHours();',...        
          'ctx.fillStyle = "black";',...
          'canvas.innerText = `The time is: ${hr}:${min}`;',...        
          'ctx.save();',...
          'ctx.rotate((Math.PI / 6) * hr + (Math.PI / 360) * min + (Math.PI / 21600) * sec);',...
          'ctx.lineWidth = 14;',...
          'ctx.beginPath();',...
          'ctx.moveTo(-20, 0);',...
          'ctx.lineTo(80, 0);',...
          'ctx.stroke();',...
          'ctx.restore();',...        
          'ctx.save();',...
          'ctx.rotate((Math.PI / 30) * min + (Math.PI / 1800) * sec);',...
          'ctx.lineWidth = 10;',...
          'ctx.beginPath();',...
          'ctx.moveTo(-28, 0);',...
          'ctx.lineTo(112, 0);',...
          'ctx.stroke();',...
          'ctx.restore();',...
          'ctx.save();',...
          'ctx.rotate((sec * Math.PI) / 30);',...
          'ctx.strokeStyle = "#D40000";',...
          'ctx.fillStyle = "#D40000";',...
          'ctx.lineWidth = 6;',...
          'ctx.beginPath();',...
          'ctx.moveTo(-30, 0);',...
          'ctx.lineTo(83, 0);',...
          'ctx.stroke();',...
          'ctx.beginPath();',...
          'ctx.arc(0, 0, 10, 0, Math.PI * 2, true);',...
          'ctx.fill();',...
          'ctx.beginPath();',...
          'ctx.arc(95, 0, 10, 0, Math.PI * 2, true);',...
          'ctx.stroke();',...
          'ctx.fillStyle = "rgba(0, 0, 0, 0)";',...
          'ctx.arc(0, 0, 3, 0, Math.PI * 2, true);',...
          'ctx.fill();',...
          'ctx.restore();',...        
          'ctx.beginPath();',...
          'ctx.lineWidth = 14;',...
          'ctx.strokeStyle = "#325FA2";',...
          'ctx.arc(0, 0, 142, 0, Math.PI * 2, true);',...
          'ctx.stroke();',...        
          'ctx.restore();',...        
          'window.requestAnimationFrame(clock);',...
        '}',...        
        'window.requestAnimationFrame(clock);'];
    end

    function jscode = getBallJSCode( id )

        jscode = [sprintf('const canvas = document.getElementById("%s"):',id),...
                    'const ctx = canvas.getContext("2d");',...
                    'let raf;',...
                    'let running = false;',...                    
                    'const ball = {',...
                     'x: 50,',...
                     'y: 50,',...
                     'vx: 5,',...
                     'vy: 1,',...
                     'radius: 15,',...
                     'color: "blue",',...
                      'draw() {',...
                        'ctx.beginPath();',...
                        'ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, true);',...
                        'ctx.closePath();',...
                        'ctx.fillStyle = this.color;',...
                        'ctx.fill();',...
                      '},',...
                    '};',...                    
                    'function clear() {',...
                      'ctx.fillStyle = "rgba(255, 255, 255, 0.3)";',...
                      'ctx.fillRect(0, 0, canvas.width, canvas.height);',...
                    '}',...                    
                    'function draw() {',...
                      'clear();',...
                      'ball.draw();',...
                      'ball.x += ball.vx;',...
                      'ball.y += ball.vy;',...                    
                      'if (ball.y + ball.vy > canvas.height || ball.y + ball.vy < 0) {',...
                        'ball.vy = -ball.vy;',...
                      '}',...
                      'if (ball.x + ball.vx > canvas.width || ball.x + ball.vx < 0) {',...
                        'ball.vx = -ball.vx;',...
                      '}',...                    
                      'raf = window.requestAnimationFrame(draw);',...
                    '}',...                    
                    'canvas.addEventListener("mousemove", (e) => {',...
                      'if (!running) {',...
                        'clear();',...
                        'ball.x = e.clientX;',...
                        'ball.y = e.clientY;',...
                        'ball.draw();',...
                      '}',...
                    '});',...                    
                    'canvas.addEventListener("click", (e) => {',...
                      'if (!running) {',...
                        'raf = window.requestAnimationFrame(draw);',...
                        'running = true;',...
                      '}',...
                    '});',...                    
                    'canvas.addEventListener("mouseout", (e) => {',...
                      'window.cancelAnimationFrame(raf);',...
                      'running = false;',...
                    '});',...                    
                    'ball.draw();'];
    end
    

     
